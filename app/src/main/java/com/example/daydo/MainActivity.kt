package com.example.daydo

import android.content.Intent
import android.graphics.Color
import android.graphics.Typeface
import android.graphics.drawable.GradientDrawable
import android.os.Bundle
import android.view.Gravity
import android.view.View
import android.view.ViewGroup
import android.widget.Button
import android.widget.LinearLayout
import android.widget.TextView
import androidx.appcompat.app.AppCompatActivity
import androidx.cardview.widget.CardView

class MainActivity : AppCompatActivity() {

    // We'll create a single dailyChallenge here for demonstration.
    // Later, you might generate or fetch this from somewhere else.
    private val dailyChallenge = Challenge(
        name = "Call an old friend",
        description = "Call or text someone you haven't heard from in a while.\nCatch up with them, maybe even plan an activity together.",
        date = "march 18, 2025"
    )

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)

        // Removes the gray bar on top, generated by ChatGPT
        setTheme(androidx.appcompat.R.style.Theme_AppCompat_Light_NoActionBar)
        window.statusBarColor = Color.parseColor("#191919")

        val screenHeight = resources.displayMetrics.heightPixels
        val screenWidth = resources.displayMetrics.widthPixels

        val layout = LinearLayout(this).apply {
            orientation = LinearLayout.VERTICAL
            setBackgroundColor(Color.parseColor("#191919"))
            setPadding(dpToPx(16), dpToPx(46), dpToPx(16), dpToPx(16))
            layoutParams = ViewGroup.LayoutParams(
                ViewGroup.LayoutParams.MATCH_PARENT,
                ViewGroup.LayoutParams.MATCH_PARENT
            )
        }

        // Title
        val titleTextView = TextView(this).apply {
            text = "dayDo"
            textSize = 24f
            setTextColor(Color.parseColor("#FFFFFF"))
            typeface = Typeface.create("sans-serif-light", Typeface.NORMAL)
            layoutParams = LinearLayout.LayoutParams(
                LinearLayout.LayoutParams.WRAP_CONTENT,
                LinearLayout.LayoutParams.WRAP_CONTENT
            ).apply {
                leftMargin = dpToPx(8)
            }
        }
        layout.addView(titleTextView)

        // Date
        val dateTextView = TextView(this).apply {
            text = dailyChallenge.date
            textSize = 14f
            setTextColor(Color.parseColor("#777777"))
            typeface = Typeface.create("sans-serif-light", Typeface.NORMAL)
            layoutParams = LinearLayout.LayoutParams(
                LinearLayout.LayoutParams.WRAP_CONTENT,
                LinearLayout.LayoutParams.WRAP_CONTENT
            ).apply {
                leftMargin = dpToPx(8)
            }
        }
        layout.addView(dateTextView)

        // Card for today's challenge
        val challengeCard = CardView(this).apply {
            radius = dpToPx(5).toFloat()
            setCardBackgroundColor(Color.parseColor("#232223"))
            cardElevation = 0f
            layoutParams = LinearLayout.LayoutParams(
                LinearLayout.LayoutParams.MATCH_PARENT,
                (screenHeight * 0.4).toInt()
            ).apply {
                topMargin = dpToPx(56)
                bottomMargin = dpToPx(32)
            }
        }

        // Colored bar on the left
        val leftCardLine = View(this).apply {
            setBackgroundColor(Color.parseColor("#BB86FC"))
            layoutParams = LinearLayout.LayoutParams(
                dpToPx(6),
                LinearLayout.LayoutParams.MATCH_PARENT
            )
        }

        val cardTextLayout = LinearLayout(this).apply {
            orientation = LinearLayout.VERTICAL
            setPadding(dpToPx(30), dpToPx(16), dpToPx(24), dpToPx(24))
            layoutParams = LinearLayout.LayoutParams(
                LinearLayout.LayoutParams.MATCH_PARENT,
                LinearLayout.LayoutParams.MATCH_PARENT
            )
        }

        // Today label
        val todayLabel = TextView(this).apply {
            text = "today"
            textSize = 14f
            setTextColor(Color.parseColor("#777777"))
            typeface = Typeface.create("sans-serif-light", Typeface.NORMAL)
        }
        cardTextLayout.addView(todayLabel)
        addVerticalSpace(cardTextLayout, 4)

        // Challenge Title
        val challengeTitle = TextView(this).apply {
            text = dailyChallenge.name
            textSize = 20f
            setTextColor(Color.parseColor("#FFFFFF"))
            typeface = Typeface.create("sans-serif-light", Typeface.NORMAL)
        }
        cardTextLayout.addView(challengeTitle)
        addVerticalSpace(cardTextLayout, 8)

        // Challenge Description
        val challengeDescription = TextView(this).apply {
            text = dailyChallenge.description
            textSize = 16f
            setTextColor(Color.parseColor("#888888"))
            typeface = Typeface.create("sans-serif-light", Typeface.NORMAL)
        }
        cardTextLayout.addView(challengeDescription)

        challengeCard.addView(leftCardLine)
        challengeCard.addView(cardTextLayout)
        layout.addView(challengeCard)

        // Complete button
        val completeButton = Button(this).apply {
            text = "complete"
            isAllCaps = false
            textSize = 16f
            setTextColor(Color.parseColor("#FFFFFF"))
            typeface = Typeface.create("sans-serif-light", Typeface.NORMAL)
            background = GradientDrawable().apply {
                shape = GradientDrawable.RECTANGLE
                cornerRadius = dpToPx(50).toFloat()
                setStroke(dpToPx(1), Color.parseColor("#9B70CF"))
                setColor(Color.TRANSPARENT)
            }
            minHeight = dpToPx(60)
            layoutParams = LinearLayout.LayoutParams(
                (screenWidth * 0.7).toInt(),
                LinearLayout.LayoutParams.WRAP_CONTENT
            ).apply {
                gravity = Gravity.CENTER_HORIZONTAL
                topMargin = dpToPx(32)
            }
            setOnClickListener {
                val intent = Intent(this@MainActivity, ResultActivity::class.java).apply {
                    putExtra("CHALLENGE_NAME", dailyChallenge.name)
                    putExtra("CHALLENGE_DESCRIPTION", dailyChallenge.description)
                    putExtra("CHALLENGE_DATE", dailyChallenge.date)
                }
                startActivity(intent)
                finish()
            }
        }
        layout.addView(completeButton)

        val line = View(this).apply {
            setBackgroundColor(Color.parseColor("#9B70CF"))
            layoutParams = LinearLayout.LayoutParams(
                (screenWidth * 0.35).toInt(),
                dpToPx(1)
            ).apply {
                gravity = Gravity.CENTER_HORIZONTAL
                topMargin = dpToPx(16)
            }
        }
        layout.addView(line)

        setContentView(layout)
    }

    // generated by ChatGPT
    private fun dpToPx(dp: Int): Int {
        return (dp * resources.displayMetrics.density + 0.5f).toInt()
    }

    // generated by ChatGPT
    private fun addVerticalSpace(parent: LinearLayout, heightDp: Int) {
        val space = View(this)
        space.layoutParams = LinearLayout.LayoutParams(
            LinearLayout.LayoutParams.MATCH_PARENT,
            dpToPx(heightDp)
        )
        parent.addView(space)
    }
}
